---
description: Tiêu chuẩn phát triển React Components - React Component Development Standards
globs:
  - 'src/components/**/*.{ts,tsx,js,jsx}'
  - 'src/pages/**/*.{ts,tsx,js,jsx}'
alwaysApply: false
---

# Tiêu chuẩn phát triển React Components
# React Component Development Standards

## Cấu trúc Component / Component Structure
```jsx
interface ComponentProps {
  // Định nghĩa interface cho props
}

export default function ComponentName({ prop1, prop2 }: ComponentProps) {
  // Logic của component
  return (
    <div>
      {/* Nội dung JSX */}
    </div>
  )
}
```

## Tổ chức file / File Organization
- Tạo index.ts/tsx cho component exports
- Sử dụng PascalCase cho tên component
- Đặt styles trong file .module.css
- Bao gồm TypeScript types đầy đủ

## Hướng dẫn Styling / Styling Guidelines
- Sử dụng CSS Modules độc quyền
- Tuân thủ quy ước đặt tên BEM-like: .component__element--modifier
- Sử dụng CSS custom properties cho theming
- Triển khai responsive design với mobile-first approach

## Best Practices
- Sử dụng functional components với hooks
- Triển khai error boundaries đúng cách
- Thêm loading states khi cần thiết
- Sử dụng clsx cho conditional CSS classes
- Tuân thủ accessibility guidelines (ARIA labels, semantic HTML)

## Quy ước đặt tên / Naming Conventions
- Components: PascalCase (ví dụ: BlogPost, UserProfile)
- Files: PascalCase hoặc kebab-case (ví dụ: BlogPost.tsx hoặc blog-post.tsx)
- CSS classes: BEM-like naming (ví dụ: .blog-post__title--large)
- Props: camelCase (ví dụ: blogTitle, userProfile)

## TypeScript Guidelines
- Định nghĩa interface cho tất cả props
- Sử dụng proper types cho state và events
- Export types khi cần thiết
- Sử dụng generic types khi phù hợp
